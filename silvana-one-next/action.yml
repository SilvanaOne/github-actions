name: Frontend Deploy

inputs:
  workdir:
    default: '.'
  webroot:
    description: The root directory of the web server that will be used to search for a file
    required: true
  systemd_service:
    description: SystemD service name
    required: true
  ssh_hostname:
    description: SSH hostname
    required: true
  ssh_username:
    description: SSH username
    required: true
  ssh_key:
    description: SSH private key
    required: true
  ssh_port:
    description: SSH port
    default: '22'
  github_token:
    description: GitHub Personal Access Token (PAT)
    required: true

runs:
  using: composite
  steps:
  - name: Login to GitHub Packages
    shell: sh
    run: |
      cat > .npmrc <<-EOF
        //npm.pkg.github.com/:_authToken=${{ inputs.github_token }}
        @SilvanaOne:registry=https://npm.pkg.github.com
        @staketab:registry=https://npm.pkg.github.com
      EOF

  - name: Setup SSH Connection
    shell: sh
    run: |
      mkdir -p $HOME/.ssh && chmod 700 $HOME/.ssh
      echo "${{ inputs.ssh_key }}" > $HOME/.ssh/id_rsa
      chmod 600 $HOME/.ssh/id_rsa
      ssh-keyscan -p ${{ inputs.ssh_port }} ${{ inputs.ssh_hostname }} >> $HOME/.ssh/known_hosts 2>/dev/null

  - name: Install pnpm
    uses: pnpm/action-setup@v3
    with:
      version: 8
      run_install: false

  - name: Install NPM dependencies
    working-directory: ${{ inputs.workdir }}
    shell: sh
    run: pnpm install

  - name: Build project
    working-directory: ${{ inputs.workdir }}
    shell: sh
    run: pnpm run build

  - name: Deploy compiled project to the remote server
    shell: sh
    run: |
      ssh -p ${{ inputs.ssh_port }} ${{ inputs.ssh_username }}@${{ inputs.ssh_hostname }} rm -rf ${{ inputs.webroot }}/*

      rsync \
        --archive \
        --verbose \
        --human-readable \
        --delete-before \
        -e "ssh -p ${{ inputs.ssh_port }}" \
        ${{ inputs.workdir }}/ ${{ inputs.ssh_username }}@${{ inputs.ssh_hostname }}:${{ inputs.webroot }}/

      ssh -p ${{ inputs.ssh_port }} ${{ inputs.ssh_username }}@${{ inputs.ssh_hostname }} "sudo systemctl restart ${{ inputs.systemd_service }}"
