name: Frontend Deploy

inputs:
  webroot:
    description: The root directory of the web server that will be used to search for a file
    required: true
  ssh_hostname:
    description: SSH hostname
    required: true
  ssh_username:
    description: SSH username
    required: true
  ssh_password:
    description: SSH password
    required: true
  lib_latest:
    description: Install the latest version of @staketab/lib
    default: false
  keep_source_maps:
    description: Keep JavaScript Source Maps
    default: true
  nodejs_version:
    description: Node.js version
    default: 14.x
  github_token:
    description: GitHub Personal Access Token (PAT)
    required: true

runs:
  using: composite
  steps:
  - name: Setup Node.js (${{ inputs.nodejs_version }})
    uses: actions/setup-node@v3
    with:
      node-version: ${{ inputs.nodejs_version }}
      cache: npm
    
  - name: Login to GitHub Packages
    shell: sh
    run: |
      cat > .npmrc <<-EOF
        //npm.pkg.github.com/:_authToken=${{ inputs.github_token }}
        @staketab:registry=https://npm.pkg.github.com
        @SilvanaOne:registry=https://npm.pkg.github.com
      EOF

  - name: Install NPM dependencies
    shell: sh
    run: npm install ${{ inputs.lib_latest == 'true' && '@staketab/lib@latest' || '' }}
    env:
      GITHUB_TOKEN: ${{ inputs.github_token }}

  - name: Build a NPM package
    shell: sh
    run: npm run build
    env:
      CI: 'false'

  - name: Deploy compiled project to the remote server
    shell: sh
    run: |
      mkdir -p $HOME/.ssh && chmod 700 $HOME/.ssh
      ssh-keyscan ${{ inputs.ssh_hostname }} >> $HOME/.ssh/known_hosts 2>/dev/null

      sshpass -p "${{ inputs.ssh_password }}" \
        rsync \
          --archive \
          --verbose \
          --human-readable \
          --delete-before \
          ${{ inputs.keep_source_maps == 'false' && '--exclude="*.map"' || '' }} build/ ${{ inputs.ssh_username }}@${{ inputs.ssh_hostname }}:${{ inputs.webroot }}/
