name: Frontend Deploy

inputs:
  webroot:
    description: The root directory of the web server that will be used to search for a file
    required: true
  ssh_hostname:
    description: SSH hostname
    required: true
  ssh_username:
    description: SSH username
    required: true
  ssh_password:
    description: SSH password
    required: true
  ssh_key:
    description: SSH private key
    required: true
  ssh_port:
    description: SSH port
    default: '22'
  lib_latest:
    description: Install the latest version of @staketab/lib
    default: false
  keep_source_maps:
    description: Keep JavaScript Source Maps
    default: true
  nodejs_version:
    description: Node.js version
    default: 16.x
  github_token:
    description: GitHub Personal Access Token (PAT)
    required: true

runs:
  using: composite
  steps:
  - name: Login to GitHub Packages
    shell: sh
    run: |
      cat > .npmrc <<-EOF
        //npm.pkg.github.com/:_authToken=${{ inputs.github_token }}
        @SilvanaOne:registry=https://npm.pkg.github.com
        @staketab:registry=https://npm.pkg.github.com
      EOF

  - name: Setup SSH Connection
    shell: sh
    run: |
      mkdir -p $HOME/.ssh && chmod 700 $HOME/.ssh
      echo "${{ inputs.ssh_key }}" > $HOME/.ssh/id_rsa
      chmod 600 $HOME/.ssh/id_rsa
      ssh-keyscan -p ${{ inputs.ssh_port }} ${{ inputs.ssh_hostname }} >> $HOME/.ssh/known_hosts 2>/dev/null

  - name: Install NPM dependencies
    shell: sh
    run: npm install --legacy-peer-deps ${{ inputs.lib_latest == 'true' && '@staketab/lib@latest' || '' }}
    env:
      GITHUB_TOKEN: ${{ inputs.github_token }}

  - name: Install Next.js globally
    shell: sh
    run: npm install -g next
    env:
      GITHUB_TOKEN: ${{ inputs.github_token }}

  - name: Install react
    shell: sh
    run: npm install react --legacy-peer-deps
    env:
      GITHUB_TOKEN: ${{ inputs.github_token }}

  - name: Install react-dom
    shell: sh
    run: npm install react-dom --legacy-peer-deps
    env:
      GITHUB_TOKEN: ${{ inputs.github_token }}

  - name: Build a NPM package
    shell: sh
    run: npm run build
    env:
      CI: 'false'

  - name: Deploy compiled project to the remote server
    shell: sh
    run: |
      ssh -p ${{ inputs.ssh_port }} ${{ inputs.ssh_username }}@${{ inputs.ssh_hostname }} rm -rf ${{ inputs.webroot }}/*

      rsync \
        --archive \
        --verbose \
        --human-readable \
        --delete-before \
        ${{ inputs.keep_source_maps == 'false' && '--exclude="*.map"' || '' }} \
        -e "ssh -p ${{ inputs.ssh_port }}" \
        build/ ${{ inputs.ssh_username }}@${{ inputs.ssh_hostname }}:${{ inputs.webroot }}/

      ssh -p ${{ inputs.ssh_port }} ${{ inputs.ssh_username }}@${{ inputs.ssh_hostname }} "sudo find ${{ inputs.webroot }} -not -user root -or -not -group root -exec chown root:root '{}' +"
